{
  "rules": {

    ".read": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'admin'",
    ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() == 'admin'",

      "contact-enquiries": {
      ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'employee')",
      "$enquiry": {
       	".write": true,
    		".validate": "newData.hasChildren(['createdAt', 'firstName', 'lastName', 'message', 'subject'])"
      }
    },

    "feedback": {
       ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'employee')",
      "$feedback": {
       	".write": true,
      	".validate": "newData.hasChildren(['createdAt', 'description', 'browser', 'locationPath'])"
      }
    },

    "newsletter-subscribers": {
      "$subscriber": {
       	".write": true,
      	".validate": "newData.hasChildren(['email', 'firstName', 'lastName'])"
      }
    },

    "product-reservations": {
      ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'employee')",
      "$product": {
      	"$reservation": {
      		".write": true,
      		".validate": "newData.hasChildren(['createdAt', 'email', 'firstName', 'lastName', 'productName', 'productId'])"
      	}
      }
    },

    "products": {
      ".read": true,
      "$product": {
      	".validate": "newData.hasChildren(['categoryName', 'createdAt', 'currency', 'languageTag', 'descriptionText', 'discountPct', 'discountPrice', 'inStock', 'name', 'subcategoryName'])"
      }
    },

    "reservations": {
      ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'employee')",
      ".write": true,
      "$reservation": {
      	".write": true,
      	".validate": "newData.hasChildren(['createdAt', 'email', 'firstName', 'lastName', 'productName', 'productId'])"
      }
    },

    "surveys": {
      ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'employee')",
      ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'employee')",
      "$survey": {
        "totalResponses": {
          ".read": true,
          ".write": true
        },
        ".validate": "newData.hasChildren(['createdAt', 'descriptionText', 'name', 'totalResponses'])"
      }
    },

    "survey-responses": {
      ".read": "auth != null && (root.child('users').child(auth.uid).child('role').val() == 'admin' || root.child('users').child(auth.uid).child('role').val() == 'employee')",
      "$survey": {
        "$response": {
          ".write": true,
          ".validate": "newData.hasChildren(['createdAt', 'overallService'])"
        }
      }
    },

    "users": {
      "$user": {
        ".read": "auth.uid === $user",
        ".write": "auth.uid === $user"
      }
  	}
  }
}
